<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:mvc="http://www.springframework.org/schema/mvc" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
	<!-- Root Context: defines shared resources visible to all other web components -->
	<mvc:annotation-driven/> 
			
	<!-- DataSource 등록 -->
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
	<property name="driverClassName"
		value="oracle.jdbc.driver.OracleDriver" />	
	<property name="url" value="jdbc:oracle:thin:@final.ce09aw2no0hi.ap-northeast-2.rds.amazonaws.com:11521:diedie" />
	<property name="username" value="final" />
	<property name="password" value="final" />
	</bean>
	
	<!--  MultipartResolver 설정 파일업로드  -->
  	 <bean id="multipartResolver"
   	class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
   	<property name="maxUploadSize" value="1000000000" />
   	<property name="maxInMemorySize" value="1000000000" />
  	 </bean>

	<!-- Spring과 Mybatis 연동 설정 -->
	<bean id="sqlSession"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="configLocation"
			value="classpath:mybatis-config.xml"></property>
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<bean class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg ref="sqlSession"></constructor-arg>
	</bean>
	
	<!-- <!— 트랜젝션 관리 설정 —> -->

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- <!— dao 에서 필요한 시점에 commit / rollback 이 구동되게 설정 함 aop 설정을 이용함 —> -->
	<tx:advice id="txAdvice"
		transaction-manager="transactionManager">
		<tx:attributes>
			<tx:method name="select*" read-only="true"
				rollback-for="Exception" />
			<tx:method name="insert*" rollback-for="Exception" />
			<tx:method name="update*" rollback-for="Exception" />
			<tx:method name="delete*" rollback-for="Exception" />
		</tx:attributes>
	</tx:advice>


	<tx:annotation-driven
		transaction-manager="transactionManager" />

  	 <aop:config proxy-target-class="true">
  	    <aop:pointcut
  	       expression="execution(* com.kh.bangbang..*ServiceImpl.*(..))"
  	       id="serviceMethod" />
  	    <aop:advisor advice-ref="txAdvice" id="transactionAdvisor"
 	        pointcut-ref="serviceMethod" />
 	  </aop:config>

</beans>
